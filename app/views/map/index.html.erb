<div class="split left">
  <div class='title'>Polygon Map</div>
  <div class='information'>
    <p>Use icon <img src="/images/polygon.jpg" class='width-20'> (top right side) to draw polygon</p>
  </div>
  <div class="centered">
    <div class='upper-section'>
      <div id="map"></div>
    </div>
  </div>
</div>

<div class="split right">
  <div class='title'>Saved Polygon</div>
  <div class="centered polygon-data">
    <%= render partial: 'sidebar' %>
  </div>
</div>

<script type="text/javascript">
  // center of the map
  var center = [48.856, 2.35];

  // Create the map
  var map = L.map('map').setView(center, 11);

  // Set up the OSM layer
  L.tileLayer(
    'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Data Â© <a href="http://osm.org/copyright">OpenStreetMap</a>',
      maxZoom: 18
    }).addTo(map);

  // add a marker in the given location
  L.marker(center).addTo(map);

  // Initialise the FeatureGroup to store editable layers
  var editableLayers = new L.FeatureGroup();
  map.addLayer(editableLayers);

  var drawPluginOptions = {
    position: 'topright',
    draw: {
      polygon: {
        allowIntersection: false, // Restricts shapes to simple polygons
        drawError: {
          color: '#e1e100', // Color the shape will turn when intersects
          message: '<strong>Oh snap!<strong> you can\'t draw that!' // Message that will show when intersect
        },
        shapeOptions: {
          color: '#97009c'
        }
      },
      // disable toolbar item by setting it to false
      polyline: false,
      circle: false, // Turns off this drawing tool
      rectangle: false,
      marker: false,
      },
    edit: {
      featureGroup: editableLayers, //REQUIRED!!
      remove: false
    }
  };

  // Initialise the draw control and pass it the FeatureGroup of editable layers
  var drawControl = new L.Control.Draw(drawPluginOptions);
  map.addControl(drawControl);

  var editableLayers = new L.FeatureGroup();
  map.addLayer(editableLayers);

  map.on('draw:created', function(e) {
    var type = e.layerType,
     layer = e.layer;

    if (type === 'marker') {
      layer.bindPopup('A popup!');
    }
    // Get coordinates of polygon and store
    var shape = layer.toGeoJSON();
    StoreShape(JSON.stringify(shape));

    editableLayers.addLayer(layer);
  });

  // Function to store shape in DB
  function StoreShape(shape) {
    alert("Saving record " + shape);
    parsed_data = JSON.parse(shape)
    coordinates = JSON.stringify(parsed_data.geometry.coordinates)
    geometry = {'type': parsed_data.geometry.type, 'coordinates': coordinates}
    $.ajax({
      url: "/polygon",
      dataType: "script",
      type: "post",
      data: {geometry: geometry},
      success: function(data) {
      }
    })

  };

</script>
